
    
    type Query {
        info: String!
        feed:[Task]!
        task(id: ID!): Task
    }

     type AuthPayload{
        token:String!
        user:User
    }

    type User {
        id: ID!
        name: String!
        email: String!
        tasks: [Task!]!
    }

    type Mutation {
        post(taskName:String!, description:String!): Task!
        signup(email:String!, password:String!, name:String!): AuthPayload
        login(email:String!, password:String!): AuthPayload
        vote(taskId: ID!): Vote
    }

    type Vote {
        id: ID!
        task: Task!
        user: User!
    }
    type Task {
        id: ID!
        description: String!
        taskName: String!
        postedBy: User
        deletedTask(id: ID!): Task
        votes: [Vote!]!
    }

    type Subscription {
        newTask: Task
        newVote: Votes
    }